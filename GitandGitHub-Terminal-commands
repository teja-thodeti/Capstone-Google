| Shortcut Command            | Full Command                | What It Does (in English, not Klingon)                                   |
------------------------------------------------------------------------ |
| `git init`                  | `git init`                  | Starts a new Git repo. Like giving birth, but for code.                  
| `git clone <url>`           | `git clone <url>`           | Downloads a repo. Basically repo   kidnapping.                             |
| `git status`                | `git status`                | Tells you what’s up: what’s changed, staged, or still lounging around.   
| `git add .`                 | `git add .`                 | Stages **everything**. Yes, even that typo.                              |
| `git add <file>`            | `git add <file>`            | Adds only the file you point to. Kind of like favoritism.                |
| `git commit -m "msg"`       | `git commit -m "msg"`       | Saves the changes with a love letter (message).                          |
| `git push`                  | `git push`                  | Sends your changes to GitHub/remote. The adult version of show-and-tell. 
| `git pull`                  | `git pull`                  | Gets updates from the remote. Like gossip but with code.                 
| `git log`                   | `git log`                   | Shows commit history. It’s like your browser history, but nerdier.       
| `git branch`                | `git branch`                | Lists branches. Not tree branches. Code ones.                            |
| `git branch <name>`         | `git branch <name>`         | Creates a new branch. Parallel universe for code.                         |
| `git checkout <name>`       | `git checkout <name>`       | Switches to another branch. *Teleportation!*                             |
| `git checkout -b <name>`    | `git checkout -b <name>`    | Creates AND switches to a new branch. Two birds, one stone.              
| `git merge <branch>`        | `git merge <branch>`        | Combines another branch into the current one. Sometimes explodes.        
| `git stash`                 | `git stash`                 | Temporarily hides your changes. Like sweeping mess under the rug.        
| `git stash pop`             | `git stash pop`             | Brings your mess back. Yay, responsibility.                              |
| `git remote -v`             | `git remote -v`             | Shows the remote repos. Like your repo’s emergency contacts.             
| `git reset --hard <commit>` | `git reset --hard <commit>` | Time-travel. WARNING: you lose changes. Like a memory wipe.              
| `git rm <file>`             | `git rm <file>`             | Deletes a file and stages the murder.                                    |
| `git diff`                  | `git diff`                  | Shows what changed. Like before-and-after pics.                          |
